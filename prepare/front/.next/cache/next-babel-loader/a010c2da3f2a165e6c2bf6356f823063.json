{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport { HYDRATE } from 'next-redux-wrapper';\nimport user from './user';\nimport post from './post';\nimport { combineReducers } from 'redux';\nvar initialState = {\n  user: {},\n  post: {}\n};\nvar rootReducer = combineReducers({\n  index: function index() {\n    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var action = arguments.length > 1 ? arguments[1] : undefined;\n\n    switch (action.type) {\n      case HYDRATE:\n        return _objectSpread(_objectSpread({}, state), action.payload);\n\n      default:\n        return state;\n    }\n  },\n  user: user,\n  post: post\n});\nexport default rootReducer;","map":{"version":3,"names":["HYDRATE","user","post","combineReducers","initialState","rootReducer","index","state","action","type","payload"],"sources":["/Users/yeni/ProjectWWW/prepare/front/reducers/index.js"],"sourcesContent":["import { HYDRATE } from 'next-redux-wrapper';\n\nimport user from './user';\nimport post from './post';\nimport { combineReducers } from 'redux';\n\nconst initialState = {\n\tuser: {\n\n\t},\n\tpost: {\n\n\t}\n};\n\n\nconst rootReducer = combineReducers({\n\tindex: (state = {}, action) => {\n\t\tswitch(action.type) {\n\t\t\tcase HYDRATE: \n\t\t\t return {...state, ...action.payload};\n\t\n\t\t\tdefault:\n\t\t\t\treturn state;\n\t\t}\n\t},\n\tuser,\n\tpost\n}); \n\nexport default rootReducer;"],"mappings":";;;;;;AAAA,SAASA,OAAT,QAAwB,oBAAxB;AAEA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,SAASC,eAAT,QAAgC,OAAhC;AAEA,IAAMC,YAAY,GAAG;EACpBH,IAAI,EAAE,EADc;EAIpBC,IAAI,EAAE;AAJc,CAArB;AAUA,IAAMG,WAAW,GAAGF,eAAe,CAAC;EACnCG,KAAK,EAAE,iBAAwB;IAAA,IAAvBC,KAAuB,uEAAf,EAAe;IAAA,IAAXC,MAAW;;IAC9B,QAAOA,MAAM,CAACC,IAAd;MACC,KAAKT,OAAL;QACC,uCAAWO,KAAX,GAAqBC,MAAM,CAACE,OAA5B;;MAED;QACC,OAAOH,KAAP;IALF;EAOA,CATkC;EAUnCN,IAAI,EAAJA,IAVmC;EAWnCC,IAAI,EAAJA;AAXmC,CAAD,CAAnC;AAcA,eAAeG,WAAf"},"metadata":{},"sourceType":"module"}